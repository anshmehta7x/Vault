# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'editpass.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import json
from encrypt import *
import clipboard
from PyQt5.QtWidgets import QMessageBox


class Ui_editpassWin(object):
    def setupUi(self, editpassWin):
        editpassWin.setObjectName("editpassWin")
        editpassWin.resize(770, 530)
        self.titleLabel = QtWidgets.QLabel(editpassWin)
        self.titleLabel.setGeometry(QtCore.QRect(200, 10, 371, 71))
        font = QtGui.QFont()
        font.setFamily("Rockwell")
        font.setPointSize(20)
        self.titleLabel.setFont(font)
        self.titleLabel.setObjectName("titleLabel")
        self.nameLabel = QtWidgets.QLabel(editpassWin)
        self.nameLabel.setGeometry(QtCore.QRect(90, 90, 161, 51))
        font = QtGui.QFont()
        font.setFamily("Rockwell")
        font.setPointSize(16)
        self.nameLabel.setFont(font)
        self.nameLabel.setObjectName("nameLabel")
        self.nameDropDown = QtWidgets.QComboBox(editpassWin)
        self.nameDropDown.setGeometry(QtCore.QRect(300, 100, 351, 41))
        font = QtGui.QFont()
        font.setFamily("Rockwell")
        font.setPointSize(14)
        self.nameDropDown.setFont(font)
        self.nameDropDown.setObjectName("nameDropDown")
        self.nameDropDown.clearFocus()
        self.usernameLabel = QtWidgets.QLabel(editpassWin)
        self.usernameLabel.setGeometry(QtCore.QRect(90, 250, 181, 61))
        font = QtGui.QFont()
        font.setFamily("Rockwell")
        font.setPointSize(16)
        self.usernameLabel.setFont(font)
        self.usernameLabel.setObjectName("usernameLabel")
        self.urlLabel = QtWidgets.QLabel(editpassWin)
        self.urlLabel.setGeometry(QtCore.QRect(90, 160, 171, 71))
        font = QtGui.QFont()
        font.setFamily("Rockwell")
        font.setPointSize(16)
        self.urlLabel.setFont(font)
        self.urlLabel.setObjectName("urlLabel")
        self.passwordLabel = QtWidgets.QLabel(editpassWin)
        self.passwordLabel.setGeometry(QtCore.QRect(90, 340, 171, 51))
        font = QtGui.QFont()
        font.setFamily("Rockwell")
        font.setPointSize(16)
        self.passwordLabel.setFont(font)
        self.passwordLabel.setObjectName("passwordLabel")
        self.passwordLine = QtWidgets.QLineEdit(editpassWin)
        self.passwordLine.setGeometry(QtCore.QRect(270, 340, 391, 41))
        self.passwordLine.setObjectName("passwordLine")
        self.usernameLine = QtWidgets.QLineEdit(editpassWin)
        self.usernameLine.setGeometry(QtCore.QRect(270, 260, 391, 41))
        self.usernameLine.setObjectName("usernameLine")
        self.urlLine = QtWidgets.QLineEdit(editpassWin)
        self.urlLine.setGeometry(QtCore.QRect(270, 180, 431, 41))
        self.urlLine.setObjectName("urlLine")
        self.usernameCopy = QtWidgets.QPushButton(editpassWin)
        self.usernameCopy.setGeometry(QtCore.QRect(670, 260, 71, 41))
        font = QtGui.QFont()
        font.setFamily("Rockwell")
        font.setPointSize(12)
        self.usernameCopy.setFont(font)
        self.usernameCopy.setObjectName("usernameCopy")
        self.passwordCopy = QtWidgets.QPushButton(editpassWin)
        self.passwordCopy.setGeometry(QtCore.QRect(670, 340, 71, 41))
        font = QtGui.QFont()
        font.setFamily("Rockwell")
        font.setPointSize(12)
        self.passwordCopy.setFont(font)
        self.passwordCopy.setObjectName("passwordCopy")
        self.saveButton = QtWidgets.QPushButton(editpassWin)
        self.saveButton.setGeometry(QtCore.QRect(110, 420, 241, 61))
        font = QtGui.QFont()
        font.setFamily("Rockwell")
        font.setPointSize(18)
        self.saveButton.setFont(font)
        self.saveButton.setObjectName("saveButton")
        self.deleteButton = QtWidgets.QPushButton(editpassWin)
        self.deleteButton.setGeometry(QtCore.QRect(440, 420, 261, 61))
        font = QtGui.QFont()
        font.setFamily("Rockwell")
        font.setPointSize(18)
        self.deleteButton.setFont(font)
        self.deleteButton.setObjectName("deleteButton")

        self.retranslateUi(editpassWin)
        QtCore.QMetaObject.connectSlotsByName(editpassWin)
        self.addtodropdown(editpassWin)

        global it
        it = Item(self.nameDropDown.currentText(),self.urlLine,self.usernameLine,self.passwordLine)
        it.show()

        self.nameDropDown.currentTextChanged.connect(self.nameselected)
        self.saveButton.clicked.connect(self.savechanges)
        self.deleteButton.clicked.connect(self.deleteitem)
        self.passwordCopy.clicked.connect(self.pcopy)
        self.usernameCopy.clicked.connect(self.ucopy)




    def retranslateUi(self, editpassWin):
        _translate = QtCore.QCoreApplication.translate
        editpassWin.setWindowTitle(_translate("editpassWin", "Edit passwords"))
        self.titleLabel.setText(_translate("editpassWin", "Edit or View passwords"))
        self.nameLabel.setText(_translate("editpassWin", "Select name"))
        self.usernameLabel.setText(_translate("editpassWin", "Username/ \n"
" Email"))
        self.urlLabel.setText(_translate("editpassWin", "Website/ \n"
" application"))
        self.passwordLabel.setText(_translate("editpassWin", "Password"))
        self.usernameCopy.setText(_translate("editpassWin", "Copy"))
        self.passwordCopy.setText(_translate("editpassWin", "Copy"))
        self.saveButton.setText(_translate("editpassWin", "Save Changes"))
        self.deleteButton.setText(_translate("editpassWin", "Delete Password"))



    
    def addtodropdown(self, editpassWin):
        names = []
        for obj in reader()["objects"]:
            names.append(obj["name"])
        print(names)
        for name in names:
            self.nameDropDown.addItem(name)
    
    def nameselected(self,editpassWin):
        n = self.nameDropDown.currentText()
        global it
        it = Item(self.nameDropDown.currentText(),self.urlLine,self.usernameLine,self.passwordLine)
        
        it.show()
    
    def savechanges(self,editpassWin):
        it.save()

    def deleteitem(self,editpassWin):
        it.delt(self.nameDropDown)
    
    def pcopy(self, editpassWin):
        it.copypass()

    def ucopy(self,editpassWin):
        it.copyuser()
       

class Item():
    def __init__(self, nam, urlline, userline,passline):
        self.name = nam
        self.urlline = urlline
        self.userline = userline
        self.passline = passline
        self.dataget()
    
    def dataget(self):
        objs = reader()["objects"]
        for obj in objs:
            if obj["name"] == self.name:
                self.url = obj["url"]
                self.user = obj["user"]
                self.pkey = obj["passkey"]
            
            else:
                pass
        try:
            self.passwrd = decrypt(self.pkey[0].encode(),self.pkey[1])
            self.key = self.pkey[1]
        except:
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Critical)
            msg.setText("No passwords in databased")
            msg.setInformativeText('Reopen the application and add passwords')
            msg.setWindowTitle("Error")
            msg.exec_()

            pass

    def copypass(self):
        clipboard.copy(self.passwrd)
    
    def copyuser(self):
        clipboard.copy(self.user)

    def show(self):
        self.urlline.setText(self.url)
        self.userline.setText(self.user)
        self.passline.setText(self.passwrd)
    
    def save(self):
        z = reader()["objects"]
        b = reader()
        for objs in reader()["objects"]:
            if objs["name"] == self.name:
                z.remove(objs)
                break
        
        b["objects"] = z
        writer(b)
        
        newurl = self.urlline.text()
        newuser = self.userline.text()
        newpass = self.passline.text()
        readdic = reader()
        passes = readdic["objects"]
        self.crypt = encrypt(newpass)
        print(self.crypt[0].decode())
        towrite = {
            "name":self.name,
            "url":newurl,
            "user":newuser,
            "passkey":[self.crypt[0].decode(),self.crypt[1].decode()]
        }
        passes.append(towrite)
        readdic["objects"] = passes
        writer(readdic)


    def delt(self,box):
        z = reader()["objects"]
        b = reader()
        for objs in reader()["objects"]:
            if objs["name"] == self.name:
                z.remove(objs)
                break
        
        b["objects"] = z
        writer(b)

        box.clear()
        self.urlline.setText("")
        self.userline.setText("")
        self.passline.setText("")
        names = []
        for obj in reader()["objects"]:
            names.append(obj["name"])
        print(names)
        for name in names:
            box.addItem(name)

        del it


        


        


#functions to speed up json read write process in other parts of program
def reader():
    with open("pass.json") as f:
        return json.load(f)

def writer(d):
    with open("pass.json", "w") as f:
        json.dump(d,f)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    editpassWin = QtWidgets.QWidget()
    ui = Ui_editpassWin()
    ui.setupUi(editpassWin)
    editpassWin.show()
    sys.exit(app.exec_())